
services:
  ticket:
    build:
      context: ..
      dockerfile: "dev/ticket.dockerfile"

    container_name: "ticket"
    ports:
      - "2560:2560"
    volumes:
      - ./docker.toml:/etc/ticket/docker.toml
    depends_on:
      - redis
      - keycloak
    environment:
      - RUST_LOG=ticket=trace,debug
    command: ["-c", "/etc/ticket/docker.toml"]
    networks:
      - ticket

  redis:
    image: "redis:8.2-rc1-alpine3.22"
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - ticket

  keycloak:
    image: "keycloak/keycloak:latest"
    container_name: keycloak
    ports:
      - "8080:8080"
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
      KC_DB: postgres
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: admin
      KC_DB_URL: "jdbc:postgresql://postgres:5432/keycloak"
    command: start-dev --features=docker
    depends_on:
      - postgres
    networks:
      - ticket
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:8080/health/ready"]
      interval: 5s
      timeout: 5s
      retries: 3

  postgres:
    image: "postgres:alpine"
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ticket

networks:
  ticket:
    driver: bridge

volumes:
  postgres:
